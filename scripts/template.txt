import {
	IExecuteFunctions,
	INodeType,
	INodeTypeDescription,
	SupplyData,
} from "n8n-workflow";

import { NodeConnectionType } from "@/interface/connectionType";
import {
	collectAdvancedOptions,
	collectGeneratedOptions,
	standardContainerRunner,
} from "@/interface/runner/standardContainerRunner";

export class Template implements INodeType {
	description: INodeTypeDescription = {
		displayName: "Runner Template",
		name: "template",
		group: ["output"],
		version: 1,
		description: "Interact with Template",
		defaults: {
			name: "Template",
		},
		// eslint-disable-next-line n8n-nodes-base/node-class-description-inputs-wrong-regular-node
		inputs: [],
		// eslint-disable-next-line n8n-nodes-base/node-class-description-outputs-wrong
		outputs: [NodeConnectionType.InfoCollector] as any,
		properties: PROPERTY,
	};

	async supplyData(
		this: IExecuteFunctions,
		itemIndex: number
	): Promise<SupplyData> {
		return {
			response: standardContainerRunner(
				(assets) => [
					"template",
					...EXTRA_ARGS,
					...assets.flatMap((a) =>
						a.basic.host ? [TARGET_ARG, a.basic.host] : []
					),
					...collectGeneratedOptions(this, itemIndex, EXTRA_ARG_PARAMETERS),
				],
				(rawAssets, stdout) => {
					const data = (FORMAT_MAP)(stdout);
					for (const json of data) {
						//
					}
					return rawAssets.map((a) => a);
				},
				collectAdvancedOptions(this, itemIndex)
			),
		};
	}
}
